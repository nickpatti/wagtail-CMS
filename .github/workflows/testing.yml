name: Docker Based CI

on:
  push:
    branches: [ ci-setup-testing ]
  pull_request:
    branches: [ rob-fixes ]

jobs:

  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7-alpine
        env:
          POSTGRES_DB: django
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mongo:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: "mongodb"
          MONGO_INITDB_ROOT_PASSWORD: "mongodb"
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v1
    - name: Build the docker-compose stack
      run: docker-compose -f docker-compose.ci.yml up -d
    - name: Check running containers
      run: docker ps -a
    - name: Check logs
      run: docker logs wagtail
    - name: Populate Postgres
      run: docker exec wagtail python manage.py populate_cms
    - name: Populate MongoDB (institutions)
      run: docker exec wagtail python manage.py populate_institutions
    - name: Populate MongoDB (courses)
      run: docker exec wagtail python manage.py populate_courses
    - name: Run test suite
      run: docker exec wagtail python manage.py test
